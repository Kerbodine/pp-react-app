{"version":3,"sources":["components/navbar/NavbarItem.js","components/navbar/NavbarLogo.js","components/navbar/Navbar.js","components/Dashboard.js","components/Profile.js","components/reminders/ReminderItem.js","components/reminders/ReminderSidebar.js","components/reminders/TaskItem.js","components/ui/ConfirmModal.js","components/reminders/Reminders.js","components/notes/TagItem.js","components/notes/TagList.js","components/notes/PageItem.js","components/notes/PageSidebar.js","components/notes/Notes.js","components/readingList/ReadingListItem.js","components/readingList/ReadingListSidebar.js","components/readingList/BookItem.js","components/readingList/ReadingList.js","components/Extras.js","components/Settings.js","components/sidebar/SideItem.js","components/sidebar/SideWidget.js","components/sidebar/SideStickie.js","components/sidebar/SettingsContext.js","components/sidebar/CountdownAnimation.js","components/sidebar/SetPomodoro.js","components/sidebar/SidePomodoro.js","components/sidebar/SidePanel.js","components/ui/WorkModeAlert.js","components/ui/PomodoroAlert.js","App.js","index.js"],"names":["NavbarItem","icon","path","active","useLocation","pathname","className","NavbarLogo","Navbar","accent","to","Dashboard","Profile","ReminderItem","index","title","color","amount","selectList","onClick","ReminderSidebar","allLists","newListHandler","useState","showCategories","setShowCategories","showLists","setShowLists","slice","map","list","listIndex","id","Object","keys","tasks","length","TaskItem","completed","dueDate","updateComponent","today","description","important","starred","deleteTask","expanded","pinned","isDragging","completeTaskHandler","unCompleteTaskHandler","taskTitle","setTaskTitle","taskDate","setTaskDate","displayComplete","setDisplayComplete","taskDescription","setTaskDescription","taskToday","setTaskToday","taskImportant","setTaskImportant","taskStarred","setTaskStarred","taskDropDown","setTaskDropdown","taskPinned","setTaskPinned","useEffect","timeout","setTimeout","clearTimeout","placeholder","type","value","onChange","e","target","selected","date","dateFormat","placeholderText","ConfirmModal","darkMode","message","deleteConfirmation","toggleDeleteConfirmation","deleteListHandler","ReactDom","createPortal","document","getElementById","Reminders","remindersData","setAllLists","currentListIndex","setCurrentListIndex","taskList","setTaskList","colorDropdown","setColorDropdown","setDeleteConfirmation","updateTaskHandler","tempTask","forEach","i","task","j","temp","listColorHandler","newColor","deleteTaskHandler","splice","deleteCompletedTaskHandler","taskFilter","sliceStart","sliceEnd","allTaskFilter","filter","draggableId","isDragDisabled","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","newList","uuidv4","showCompleted","autoComplete","onDragEnd","result","destination","items","Array","from","source","reorderedItem","droppableId","isDraggingOver","droppableProps","push","TagItem","TagList","allTags","setAllTags","tagRef","useRef","tag","key","current","prevTags","PageItem","selectPage","PageSidebar","allPages","newPageHandler","page","pageIndex","Notes","data","content","tags","readOnly","editorRef","setReadOnly","viewModeDropdown","setViewModeDropdown","setAllPages","currentPageIndex","setCurrentPageIndex","readOnlyHandler","newPage","onInit","evt","editor","onEditorChange","initialValue","apiKey","process","REACT_APP_TINYMCE_API_KEY","init","skin","content_css","height","menubar","plugins","toolbar","content_style","ReadingListItem","ReadingListSidebar","books","BookItem","author","rating","progress","deleteBook","favorite","bookTitle","setBookTitle","bookAuthor","setBookAuthor","bookDescription","setBookDescription","bookRating","setBookRating","bookType","setBookType","bookProgress","setBookProgress","bookExpanded","setBookExpanded","progressColor","setProgressColor","bookFavorite","setBookFavorite","progressSelect","step","progressArray","progressIndex","indexOf","bookTypeSelect","initialRating","fractions","emptySymbol","fullSymbol","rate","ReadingList","readingListData","showColorSelector","setShowColorSelector","bookList","setBookList","bookTypeFilter","setBookTypeFilter","typeDropdown","setTypeDropdown","toggleTypeDropdown","updateBookHandler","deleteBookHandler","book","startDate","endDate","Extras","Settings","SideItem","taskName","SideWidget","eventName","countdown","timeUnit","SideStickie","SettingsContext","createContext","SettingsContextProvider","props","pomodoro","setPomodoro","executing","setExecuting","startAnimate","setStartAnimate","updateExecute","updatedSettings","setTimerTime","evaluate","work","short","long","Provider","startTimer","pauseTimer","children","remainingTime","Date","toISOString","substr","SettingsBtn","setCurrentTimer","active_state","stopAnimate","setTimerComplete","CountdownAnimation","timer","animate","useContext","isPlaying","duration","colors","strokeWidth","size","trailColor","onComplete","SetPomodoro","newTimer","setNewTimer","handleChange","input","name","parseInt","noValidate","onSubmit","preventDefault","min","max","SidePomodoro","SidePanel","workMode","credits","setCredits","toggleWorkMode","calendarType","WorkModeAlert","bannerVisible","setBannerVisible","banner","PomodoroAlert","timerComplete","App","remindersData1","now","reminderData2","readingListData1","readingListData2","darkModeValue","workModeValue","localStorage","getItem","JSON","parse","setDarkMode","loading","setLoading","setWorkMode","reminderData","setReminderData","setReadingListData","exact","component","render","setItem","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.27bc1923.chunk.js","sourcesContent":["import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function NavbarItem({ icon, path }) {\n  const location = useLocation();\n  let active = false;\n\n  if (location.pathname === path) {\n    active = true;\n  } else {\n    active = false;\n  }\n\n  return (\n    <div\n      className={`h-12 px-4 flex items-center text-2xl cursor-pointer select-none`}\n    >\n      <div\n        className={`flex items-center w-full h-full ${\n          active\n            ? \"bg-accent-400 text-white\"\n            : \"bg-primary-100 dark:bg-primary-800\"\n        }  hover:bg-accent-400 dark:hover:bg-accent-400 hover:text-white rounded-2xl`}\n      >\n        <div className=\"mx-auto\">{icon}</div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NavbarLogo({ icon }) {\n  return (\n    <div\n      className={`h-12 px-4 flex items-center text-2xl cursor-pointer select-none`}\n    >\n      <div\n        className={`flex items-center shadow-light w-full h-full bg-gray-200 dark:bg-primary-700 hover:bg-primary-300 dark:hover:bg-primary-600 rounded-2xl`}\n      >\n        <div className=\"mx-auto\">{icon}</div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavbarItem from \"./NavbarItem\";\nimport NavbarLogo from \"./NavbarLogo\";\nimport {\n  BiAtom,\n  BiGridAlt,\n  BiCheckSquare,\n  BiNotepad,\n  BiBookBookmark,\n  BiExtension,\n  BiUserCircle,\n  BiCog,\n  BiExit,\n} from \"react-icons/bi\";\n\nexport default function Navbar() {\n  return (\n    <div className=\"h-screen flex flex-col bg-primary dark:bg-primary-900 text-black dark:text-white\">\n      <div className=\"w-20 mt-4\">\n        <div className=\"absolute top-4 w-20 z-10\">\n          <NavbarLogo icon={<BiAtom />} accent={true} />\n        </div>\n        <div className=\"overflow-hidden overflow-y-auto no-scrollbar h-[calc(100vh-4rem)] flex flex-col gap-4 sticky mt-8\">\n          <div className=\"mt-4\"></div>\n          <Link to=\"/\" aria-label=\"home\">\n            <NavbarItem icon={<BiGridAlt />} path=\"/\" />\n          </Link>\n          <Link to=\"/reminders\" aria-label=\"reminders\">\n            <NavbarItem icon={<BiCheckSquare />} path=\"/reminders\" />\n          </Link>\n          <Link to=\"/notes\" aria-label=\"notes\">\n            <NavbarItem icon={<BiNotepad />} path=\"/notes\" />\n          </Link>\n          <Link to=\"/reading-list\" aria-label=\"reading list\">\n            <NavbarItem icon={<BiBookBookmark />} path=\"/reading-list\" />\n          </Link>\n          <Link to=\"/extensions\" aria-label=\"extensions\">\n            <NavbarItem icon={<BiExtension />} path=\"/extensions\" />\n          </Link>\n          <Link to=\"/profile\" aria-label=\"profile\">\n            <NavbarItem icon={<BiUserCircle />} path=\"/profile\" />\n          </Link>\n          <Link to=\"/settings\" aria-label=\"settings\">\n            <NavbarItem icon={<BiCog />} path=\"/settings\" />\n          </Link>\n          <Link to=\"/logout\" aria-label=\"logout\">\n            <NavbarItem icon={<BiExit />} path=\"/logout\" />\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Dashboard() {\n  return (\n    <div>\n      <h1>Dashboard Page</h1>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Profile() {\n  return (\n    <div>\n      <h1>Profile Page</h1>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function ReminderItem({\n  index,\n  icon,\n  title,\n  color,\n  amount,\n  selectList,\n}) {\n  return (\n    <div\n      className=\"h-10 hover:bg-primary-300 dark:hover:bg-primary-600 text-black dark:text-white flex items-center cursor-pointer\"\n      onClick={() => selectList(index)}\n    >\n      <div className={`w-2 h-full bg-${color}-400`}></div>\n      <i className=\"text-2xl mx-2\">{icon}</i>\n      <h3 className=\"truncate w-24\">{title}</h3>\n      <p className=\"ml-auto mr-4 font-bold\">{amount}</p>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport ReminderItem from \"./ReminderItem\";\nimport { BiListPlus, BiChevronDown, BiChevronUp } from \"react-icons/bi\";\n\nexport default function ReminderSidebar({\n  allLists,\n  newListHandler,\n  selectList,\n}) {\n  const [showCategories, setShowCategories] = useState(true);\n  const [showLists, setShowLists] = useState(true);\n\n  const showCategoriesHandler = () => {\n    setShowCategories(!showCategories);\n  };\n\n  const showListHandler = () => {\n    setShowLists(!showLists);\n  };\n\n  return (\n    <div className={`flex flex-col h-full cursor-pointer`}>\n      <div className=\"flex mt-4 mx-4 text-black dark:text-white\">\n        <div className=\"w-full font-bold\">CATEGORIES:</div>\n        <button onClick={showCategoriesHandler}>\n          <i className={`${showCategories ? \"visible\" : \"hidden\"} text-2xl`}>\n            <BiChevronDown />\n          </i>\n          <i className={`${showCategories ? \"hidden\" : \"visible\"} text-2xl`}>\n            <BiChevronUp />\n          </i>\n        </button>\n      </div>\n      <hr className=\"border-none h-0.5 bg-gray-300 dark:bg-primary-600 mx-4 my-2\" />\n      <div className={`${showCategories ? \"visible\" : \"hidden\"}`}>\n        {allLists.slice(0, 4).map((list, listIndex) => (\n          <div key={list.id}>\n            <ReminderItem\n              index={listIndex}\n              icon={list.icon}\n              title={list.title}\n              color={list.color}\n              selectList={selectList}\n            />\n          </div>\n        ))}\n      </div>\n      <div className=\"flex mt-4 mx-4 text-black dark:text-white\">\n        <div className=\"w-full font-bold\">MY LISTS:</div>\n        <button onClick={showListHandler}>\n          <i className={`${showLists ? \"visible\" : \"hidden\"} text-2xl`}>\n            <BiChevronDown />\n          </i>\n          <i className={`${showLists ? \"hidden\" : \"visible\"} text-2xl`}>\n            <BiChevronUp />\n          </i>\n        </button>\n      </div>\n      <hr className=\"border-none h-0.5 bg-gray-300 dark:bg-primary-600 mx-4 my-2\" />\n      <div className={`flex-auto min-h-0 ${showLists ? \"visible\" : \"hidden\"}`}>\n        <div className=\"overflow-hidden overflow-y-auto h-full\">\n          {allLists.slice(4).map((list, listIndex) => (\n            <div key={list.id}>\n              <ReminderItem\n                // Set index to be offset by 4 (list categories)\n                index={listIndex + 4}\n                title={list.title}\n                amount={Object.keys(list.tasks).length}\n                color={list.color}\n                icon={list.icon}\n                selectList={selectList}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div\n        className={`flex-auto min-h-0 ${showLists ? \"hidden\" : \"visible\"}`}\n      ></div>\n      <hr className=\"border-none h-0.5 bg-gray-300 dark:bg-primary-600\" />\n      <button\n        className=\"h-12 flex-shrink-0 hover:bg-primary-300 dark:bg-primary-700 dark:hover:bg-primary-600 text-black dark:text-white flex items-center text-lg\"\n        onClick={newListHandler}\n      >\n        <i className=\"text-2xl ml-4 mr-2\">\n          <BiListPlus />\n        </i>\n        <h2>New List</h2>\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  BiSun,\n  BiStar,\n  BiTrash,\n  BiCaretRightCircle,\n  BiCaretDownCircle,\n  BiCheck,\n  BiPin,\n} from \"react-icons/bi\";\nimport { HiOutlineExclamationCircle } from \"react-icons/hi\";\nimport DatePicker from \"react-datepicker\";\nimport \"./datepicker.css\";\n\nexport default function TaskItem({\n  id,\n  title,\n  completed,\n  dueDate,\n  updateComponent,\n  today,\n  description,\n  important,\n  starred,\n  deleteTask,\n  expanded,\n  pinned,\n  isDragging,\n  completeTaskHandler,\n  unCompleteTaskHandler,\n}) {\n  const [taskTitle, setTaskTitle] = useState(title);\n  const [taskDate, setTaskDate] = useState(dueDate);\n  const [displayComplete, setDisplayComplete] = useState(completed);\n  const [taskDescription, setTaskDescription] = useState(description);\n  const [taskToday, setTaskToday] = useState(today);\n  const [taskImportant, setTaskImportant] = useState(important);\n  const [taskStarred, setTaskStarred] = useState(starred);\n  const [taskDropDown, setTaskDropdown] = useState(expanded);\n  const [taskPinned, setTaskPinned] = useState(pinned);\n\n  const titleChangeHandler = (e) => {\n    setTaskTitle(e.target.value);\n  };\n\n  const descriptionChangeHandler = (e) => {\n    setTaskDescription(e.target.value);\n  };\n\n  const toggleTodayHandler = () => [setTaskToday(!taskToday)];\n  const toggleImportantHandler = () => [setTaskImportant(!taskImportant)];\n  const toggleStarredHandler = () => [setTaskStarred(!taskStarred)];\n  const toggleDetailsDropdown = () => [setTaskDropdown(!taskDropDown)];\n  const togglePinned = () => [setTaskPinned(!taskPinned)];\n\n  useEffect(() => {\n    updateComponent(\n      id,\n      taskTitle,\n      taskDate,\n      taskDescription,\n      taskToday,\n      taskImportant,\n      taskStarred,\n      taskDropDown,\n      taskPinned\n    );\n  }, [\n    taskTitle,\n    taskDate,\n    taskDescription,\n    taskToday,\n    taskImportant,\n    taskStarred,\n    taskDropDown,\n    taskPinned,\n  ]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (completed && !displayComplete) {\n        unCompleteTaskHandler(id);\n      } else if (!completed && displayComplete) {\n        completeTaskHandler(id);\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [displayComplete, completed]);\n\n  return (\n    <div\n      className={`w-full h-auto bg-primary-200 dark:bg-primary-700 flex p-2 rounded-md cursor-pointer mb-2 ${\n        isDragging ? \"shadow-lg\" : \"\"\n      }`}\n    >\n      <i\n        className=\"text-2xl ml-2 w-6 h-6 my-1 rounded-full flex items-center justify-center text-primary-400 dark:text-primary-500\"\n        onClick={toggleDetailsDropdown}\n      >\n        {taskDropDown ? <BiCaretDownCircle /> : <BiCaretRightCircle />}\n      </i>\n      <div className=\"mx-2 relative\">\n        <div\n          className=\"w-6 h-6 my-1 rounded-md border-2 border-primary-400 dark:border-primary-500 flex items-center justify-center\"\n          onClick={() => setDisplayComplete(!displayComplete)}\n        >\n          <div\n            className={`${\n              displayComplete ? \"visible\" : \"hidden\"\n            } text-2xl text-white bg-accent-400 rounded-md`}\n          >\n            <BiCheck />\n          </div>\n        </div>\n      </div>\n      <div className=\"text-black dark:text-white flex-auto flex flex-col\">\n        <div className=\"flex items-center h-8\">\n          <input\n            placeholder=\"Untitled task\"\n            type=\"text\"\n            value={taskTitle}\n            onChange={titleChangeHandler}\n            className={`text-lg h-8 flex-auto mr-4 truncate bg-transparent outline-none ${\n              displayComplete ? \"line-through\" : \"no-underline\"\n            }`}\n          ></input>\n          <div className=\"mr-2\">\n            <DatePicker\n              selected={taskDate}\n              onChange={(date) => setTaskDate(date)}\n              className=\"bg-primary-100 dark:bg-primary-800 w-24 h-8 text-center px-2 rounded outline-none\"\n              dateFormat=\"dd/MM/yyyy\"\n              placeholderText=\"Add date\"\n            />\n          </div>\n          <div className=\"flex\">\n            <button\n              className={`w-8 h-8 flex items-center justify-center rounded-l-md bg-primary-100 dark:bg-primary-800 dark:text-white text-black text-2xl ${\n                today ? \"!bg-blue-400 text-white\" : \"\"\n              }`}\n              onClick={toggleTodayHandler}\n            >\n              <BiSun />\n            </button>\n            <button\n              className={`w-8 h-8 flex items-center justify-center bg-primary-100 dark:bg-primary-800 dark:text-white text-black text-2xl ${\n                important ? \"!bg-red-400 text-white\" : \"\"\n              }`}\n              onClick={toggleImportantHandler}\n            >\n              <HiOutlineExclamationCircle />\n            </button>\n            <button\n              className={`w-8 h-8 flex items-center justify-center rounded-r-md bg-primary-100 dark:bg-primary-800 dark:text-white text-black text-2xl ${\n                starred ? \"!bg-yellow-400 text-white\" : \"\"\n              }`}\n              onClick={toggleStarredHandler}\n            >\n              <BiStar />\n            </button>\n            <button\n              className={`w-8 h-8 ml-2 flex items-center justify-center rounded-md bg-primary-100 hover:bg-primary-300 dark:bg-primary-800 dark:text-white dark:hover:bg-primary-600 text-black text-2xl ${\n                taskPinned\n                  ? \"!bg-primary-400 dark:!bg-primary-500 text-white\"\n                  : \"\"\n              }`}\n              aria-label=\"delete task\"\n              onClick={togglePinned}\n            >\n              <BiPin />\n            </button>\n          </div>\n        </div>\n        <div\n          className={`${\n            taskDropDown ? \"visible\" : \"hidden\"\n          } w-full h-auto mt-2 flex`}\n        >\n          <textarea\n            placeholder=\"Add a description...\"\n            value={taskDescription}\n            onChange={descriptionChangeHandler}\n            className=\"text-sm bg-transparent flex-auto h-auto outline-none mr-2 resize-y text-primary-600 dark:text-primary-400 max-h-[12rem]\"\n          ></textarea>\n          <button\n            className=\"w-8 h-8 flex items-center justify-center rounded-md bg-primary-100 hover:bg-red-400 dark:bg-primary-800 dark:text-white dark:hover:bg-red-400 text-black hover:text-white text-2xl\"\n            aria-label=\"delete task\"\n            onClick={() => {\n              deleteTask(id);\n            }}\n          >\n            <BiTrash />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { AiOutlineExclamation } from \"react-icons/ai\";\n\nexport default function ConfirmModal({\n  darkMode,\n  message,\n  deleteConfirmation,\n  toggleDeleteConfirmation,\n  deleteListHandler,\n}) {\n  if (deleteConfirmation) {\n    return ReactDom.createPortal(\n      <div\n        className={`${\n          darkMode ? \"dark\" : \"\"\n        } absolute top-0 bg-black/50 w-screen h-screen flex items-center justify-center z-10`}\n      >\n        <div className=\"w-96 rounded-2xl bg-white dark:bg-primary-700 shadow-md flex flex-col justify-center items-center p-4 gap-2 z-20 text-black dark:text-white\">\n          <div className=\"w-16 h-16 text-4xl rounded-full bg-red-400 text-white flex items-center justify-center\">\n            <AiOutlineExclamation />\n          </div>\n          <h3 className=\"text-4xl font-light\">Are you sure?</h3>\n          <p className=\"text-center\">\n            You are about to permanently delete {message}. This action cannot be\n            undone.\n          </p>\n          <div className=\"flex gap-4\">\n            <button\n              className=\"w-24 h-10 p-2 bg-primary-200 dark:bg-primary-600 hover:bg-primary-300 dark:hover:bg-primary-500 rounded-md\"\n              onClick={toggleDeleteConfirmation}\n            >\n              Cancel\n            </button>\n            <button\n              className=\"w-24 h-10 p-2 bg-red-400 active:bg-red-500 text-white rounded-md\"\n              onClick={deleteListHandler}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>,\n      document.getElementById(\"portal\")\n    );\n  } else {\n    return null;\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReminderSidebar from \"./ReminderSidebar\";\nimport TaskItem from \"./TaskItem\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  BiTrash,\n  BiListUl,\n  BiChevronDown,\n  BiPlus,\n  BiShow,\n  BiHide,\n  BiInfoCircle,\n} from \"react-icons/bi\";\nimport ConfirmModal from \"../ui/ConfirmModal\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nexport default function Reminders({ remindersData, darkMode }) {\n  const [allLists, setAllLists] = useState(remindersData);\n  const [currentListIndex, setCurrentListIndex] = useState(0);\n  const [taskList, setTaskList] = useState();\n  const [colorDropdown, setColorDropdown] = useState(false);\n  const [deleteConfirmation, setDeleteConfirmation] = useState(false);\n\n  const updateTaskHandler = (\n    id,\n    title,\n    dueDate,\n    description,\n    today,\n    important,\n    starred,\n    expanded,\n    pinned\n  ) => {\n    let tempTask = {\n      id: id,\n      title: title,\n      dueDate: dueDate,\n      completed: false,\n      description: description,\n      today: today,\n      important: important,\n      starred: starred,\n      expanded: expanded,\n      pinned: pinned,\n    };\n    allLists.forEach((list, i) =>\n      list.tasks.forEach((task, j) => {\n        if (task.id === tempTask.id) {\n          let temp = allLists;\n          temp[i].tasks[j] = tempTask;\n          setAllLists([...temp]);\n        }\n      })\n    );\n  };\n\n  // Function to change current list to selected list\n  const selectListHandler = (index) => {\n    setCurrentListIndex(index);\n  };\n\n  // Manage color dropdown state\n  const handleColorDropdown = () => {\n    setColorDropdown(!colorDropdown);\n  };\n\n  // Function to update color for current list\n  const listColorHandler = (newColor) => {\n    let temp = allLists;\n    temp[currentListIndex].color = newColor;\n    setAllLists([...temp]);\n    setColorDropdown(false);\n  };\n\n  // Function to change list title\n  const titleChangeHandler = (e) => {\n    if (currentListIndex >= 4) {\n      let temp = allLists;\n      temp[currentListIndex].title = e.target.value;\n      setAllLists([...temp]);\n    }\n  };\n\n  // Deleting tasks based on their index in currentList.tasks\n  const deleteTaskHandler = (id) => {\n    allLists.forEach((list, i) =>\n      list.tasks.forEach((task, j) => {\n        if (task.id === id) {\n          let temp = allLists;\n          temp[i].tasks.splice(j, 1);\n          setAllLists([...temp]);\n        }\n      })\n    );\n  };\n\n  // Deleting tasks based on their index in currentList.tasks\n  const deleteCompletedTaskHandler = (id) => {\n    allLists.forEach((list, i) =>\n      list.completed.forEach((task, j) => {\n        if (task.id === id) {\n          let temp = allLists;\n          temp[i].completed.splice(j, 1);\n          setAllLists([...temp]);\n        }\n      })\n    );\n  };\n\n  // Adding a new task to the end of currentList.tasks\n  const newTaskHandler = () => {\n    let temp = allLists;\n    temp[currentListIndex].tasks.push({\n      id: uuidv4(),\n      title: \"\",\n      dueDate: null,\n      description: \"\",\n      today: false,\n      important: false,\n      starred: false,\n      expanded: true,\n      pinned: false,\n    });\n    setAllLists([...temp]);\n  };\n\n  // Adding a new list to the end of allLists\n  const newListHandler = () => {\n    const newList = {\n      id: uuidv4(),\n      title: \"Untitled list\",\n      color: \"gray\",\n      icon: <BiListUl />,\n      tasks: [],\n      completed: [],\n      showCompleted: false,\n    };\n    setAllLists([...allLists, newList]);\n    setCurrentListIndex(allLists.length);\n  };\n\n  const deleteListHandler = () => {\n    setDeleteConfirmation(false);\n    const temp = allLists;\n    temp.splice(currentListIndex, 1);\n    setAllLists([...temp]);\n    setCurrentListIndex(allLists.length - 1);\n  };\n\n  const handleOnDragEnd = (result) => {\n    if (!result.destination) return;\n    const items = Array.from(allLists[currentListIndex].tasks);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    let temp = allLists;\n    temp[currentListIndex].tasks = [...items];\n\n    setAllLists([...temp]);\n  };\n\n  const completeTaskHandler = (id) => {\n    allLists.forEach((list, i) =>\n      list.tasks.forEach((task, j) => {\n        if (task.id === id) {\n          let temp = allLists;\n          let tempTask = task;\n          temp[i].tasks.splice(j, 1);\n          temp[i].completed = [...allLists[i].completed, tempTask];\n          setAllLists([...temp]);\n        }\n      })\n    );\n  };\n\n  const unCompleteTaskHandler = (id) => {\n    allLists.forEach((list, i) =>\n      list.completed.forEach((task, j) => {\n        if (task.id === id) {\n          let temp = allLists;\n          let tempTask = task;\n          temp[i].completed.splice(j, 1);\n          temp[i].tasks = [...allLists[i].tasks, tempTask];\n          setAllLists([...temp]);\n        }\n      })\n    );\n  };\n\n  const toggleShowCompleted = () => {\n    let temp = allLists;\n    temp[currentListIndex].showCompleted =\n      !allLists[currentListIndex].showCompleted;\n    setAllLists([...temp]);\n  };\n\n  useEffect(() => {\n    const todayFilter = (task) => task.today === true;\n    const importantFilter = (task) => task.important === true;\n    const starredFilter = (task) => task.starred === true;\n    const allTaskFilter = (task) => task;\n\n    let taskFilter;\n    let sliceStart;\n    let sliceEnd;\n\n    switch (currentListIndex) {\n      case 0:\n        taskFilter = todayFilter;\n        break;\n      case 1:\n        taskFilter = importantFilter;\n        break;\n      case 2:\n        taskFilter = starredFilter;\n        break;\n      case 3:\n        taskFilter = allTaskFilter;\n        break;\n      default:\n        sliceStart = currentListIndex;\n        sliceEnd = currentListIndex + 1;\n        taskFilter = allTaskFilter;\n        break;\n    }\n\n    setTaskList(\n      allLists.slice(sliceStart, sliceEnd).map((task) =>\n        task.tasks.filter(taskFilter).map((task, index) => (\n          <Draggable\n            key={task.id}\n            draggableId={task.id}\n            index={index}\n            isDragDisabled={currentListIndex < 4}\n          >\n            {(provided, snapshot) => (\n              <div\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n              >\n                <TaskItem\n                  id={task.id}\n                  title={task.title}\n                  dueDate={task.dueDate}\n                  completed={false}\n                  description={task.description}\n                  today={task.today}\n                  important={task.important}\n                  starred={task.starred}\n                  expanded={task.expanded}\n                  pinned={task.pinned}\n                  updateComponent={updateTaskHandler}\n                  deleteTask={deleteTaskHandler}\n                  isDragging={snapshot.isDragging}\n                  completeTaskHandler={completeTaskHandler}\n                />\n              </div>\n            )}\n          </Draggable>\n        ))\n      )\n    );\n  }, [currentListIndex, allLists]);\n\n  const toggleDeleteConfirmation = () => {\n    setDeleteConfirmation(!deleteConfirmation);\n  };\n\n  return (\n    <div className=\"h-screen flex bg-primary dark:bg-primary-900\">\n      <div className=\"my-4 mr-4 lg:mr-0 w-full\">\n        <div className=\"h-full rounded-2xl flex overflow-hidden\">\n          <div className=\"h-full\">\n            <div className=\"w-0 md:w-48 bg-primary-200 dark:bg-primary-700 h-full\">\n              <ReminderSidebar\n                allLists={allLists}\n                selectList={selectListHandler}\n                newListHandler={newListHandler}\n              />\n            </div>\n          </div>\n          <div className=\"w-full h-full\">\n            <div className=\"bg-primary-100 dark:bg-primary-800 h-full\">\n              <div\n                className={`w-full h-12 bg-${allLists[currentListIndex].color}-400`}\n              ></div>\n              <div className=\"h-12 mx-8 mt-8 flex flex-row items-center\">\n                <input\n                  className=\"flex-auto bg-transparent truncate text-black dark:text-white font-bold outline-none text-4xl\"\n                  autoComplete=\"off\"\n                  value={allLists[currentListIndex].title}\n                  onChange={titleChangeHandler}\n                  type=\"text\"\n                  aria-label=\"list title\"\n                ></input>\n                <div\n                  className={`${\n                    currentListIndex < 4 ? \"hidden\" : \"visible\"\n                  } relative w-8 h-8 rounded-full bg-${\n                    allLists[currentListIndex].color\n                      ? `${allLists[currentListIndex].color}-400 text-white`\n                      : \"primary-200 text-black\"\n                  } text-2xl flex items-center justify-center hover:bg-${\n                    allLists[currentListIndex].color\n                  }-400/80`}\n                  onClick={handleColorDropdown}\n                >\n                  <BiChevronDown />\n                  <div\n                    className={`${\n                      colorDropdown ? \"visible\" : \"hidden\"\n                    } absolute top-10 -left-2 w-12 bg-white dark:bg-primary-600 rounded-md shadow-md`}\n                  >\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full bg-red-400 hover:bg-red-400/80\"\n                      onClick={() => listColorHandler(\"red\")}\n                    ></div>\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full bg-yellow-400 hover:bg-yellow-400/80\"\n                      onClick={() => listColorHandler(\"yellow\")}\n                    ></div>\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full bg-green-400 hover:bg-green-400/80\"\n                      onClick={() => listColorHandler(\"green\")}\n                    ></div>\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full bg-blue-400 hover:bg-blue-400/80\"\n                      onClick={() => listColorHandler(\"blue\")}\n                    ></div>\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full bg-purple-400 hover:bg-purple-400/80\"\n                      onClick={() => listColorHandler(\"purple\")}\n                    ></div>\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full bg-gray-400 hover:bg-gray-400/80\"\n                      onClick={() => listColorHandler(\"gray\")}\n                    ></div>\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full border-gray-400 border-2 hover:bg-gray-200\"\n                      onClick={() => listColorHandler(false)}\n                    ></div>\n                  </div>\n                </div>\n                <div\n                  className={`${\n                    currentListIndex < 4 ? \"hidden\" : \"visible\"\n                  } relative w-8 h-8 rounded-full bg-primary-200 hover:bg-red-400 dark:bg-primary-700 dark:text-white dark:hover:bg-red-400 text-black hover:text-white text-2xl ml-2 flex items-center justify-center`}\n                  onClick={toggleDeleteConfirmation}\n                >\n                  <BiTrash />\n                </div>\n                <ConfirmModal\n                  darkMode={darkMode}\n                  message={`\"${allLists[currentListIndex].title}\"`}\n                  deleteConfirmation={deleteConfirmation}\n                  toggleDeleteConfirmation={toggleDeleteConfirmation}\n                  deleteListHandler={deleteListHandler}\n                />\n              </div>\n              <div\n                className={`mx-8 flex gap-2 ${\n                  currentListIndex < 4 ? \"hidden\" : \"visible\"\n                } text-black dark:text-white`}\n              >\n                <div className=\"w-full h-6 bg-primary-200 text-sm dark:bg-primary-700 rounded-md flex items-center px-2\">{`${\n                  allLists[currentListIndex].completed\n                    ? allLists[currentListIndex].completed.length\n                    : \"0\"\n                } completed`}</div>\n                <div\n                  className=\"w-6 h-6 text-lg bg-primary-200 dark:bg-primary-700 hover:bg-primary-300 rounded-md flex items-center justify-center\"\n                  onClick={toggleShowCompleted}\n                >\n                  {allLists[currentListIndex].showCompleted ? (\n                    <BiShow />\n                  ) : (\n                    <BiHide />\n                  )}\n                </div>\n              </div>\n              <div className=\"w-full h-2 bg-primary-100 dark:bg-primary-800\"></div>\n              <div className=\"\">\n                <div className=\"overflow-y-auto overflow-hidden h-[calc(100vh-10rem)] pb-16\">\n                  <div\n                    className={`${\n                      allLists[currentListIndex].showCompleted\n                        ? \"visible\"\n                        : \"hidden\"\n                    } mx-8`}\n                  >\n                    <h3 className=\"text-lg mt-2 font-semibold text-primary-600 dark:text-primary-300\">\n                      Completed tasks:\n                    </h3>\n                    {allLists[currentListIndex].completed.length !== 0 ? (\n                      allLists[currentListIndex].completed.map((task) => (\n                        <div key={task.id}>\n                          <TaskItem\n                            id={task.id}\n                            title={task.title}\n                            dueDate={task.dueDate}\n                            completed={true}\n                            description={task.description}\n                            today={task.today}\n                            important={task.important}\n                            starred={task.starred}\n                            expanded={task.expanded}\n                            pinned={task.pinned}\n                            updateComponent={updateTaskHandler}\n                            deleteTask={deleteCompletedTaskHandler}\n                            unCompleteTaskHandler={unCompleteTaskHandler}\n                          />\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"flex items-center gap-1 text-black dark:text-white\">\n                        <BiInfoCircle />\n                        <p className=\"text-sm\">No completed tasks</p>\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"mx-8 mt-2\">\n                    <h3 className=\"text-lg font-semibold text-primary-600 dark:text-primary-300\">\n                      Current tasks:\n                    </h3>\n                  </div>\n                  <DragDropContext onDragEnd={handleOnDragEnd}>\n                    <Droppable droppableId=\"reminders\">\n                      {(provided, snapshot) => (\n                        <div\n                          className={`${\n                            snapshot.isDraggingOver ? \"ring-2\" : \"ring-none\"\n                          } ring-primary-300 dark:ring-primary-600 mx-4 mb-4 px-4 pt-4 pb-2 rounded-md flex flex-col`}\n                          {...provided.droppableProps}\n                          ref={provided.innerRef}\n                        >\n                          {taskList}\n                          {provided.placeholder}\n                        </div>\n                      )}\n                    </Droppable>\n                  </DragDropContext>\n                  <div\n                    className={`${\n                      currentListIndex > 3 ? \"visible\" : \"hidden\"\n                    } mx-8 border-2 border-primary-400 dark:border-primary-500 rounded-md min-h-[2.5rem] flex items-center justify-center cursor-pointer border-dashed hover:border-solid hover:bg-primary-200 transition-all dark:hover:bg-primary-700`}\n                    onClick={newTaskHandler}\n                  >\n                    <i className=\"text-2xl text-primary-600 dark:text-primary-400\">\n                      <BiPlus />\n                    </i>\n                    <h3 className=\"text-primary-600 dark:text-primary-400\">\n                      Add new task\n                    </h3>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function TagItem({ title }) {\n  return (\n    <div\n      className={`h-auto w-min rounded-full py-0.5 px-2 cursor-pointer bg-primary-200 dark:bg-primary-700 flex items-center border-primary-400 dark:border-primary-500 border-2`}\n    >\n      <p className=\"text-black dark:text-white text-sm\">{title}</p>\n    </div>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport TagItem from \"./TagItem\";\nimport { BiPlusCircle } from \"react-icons/bi\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function TagList() {\n  const [allTags, setAllTags] = useState([]);\n\n  const tagRef = useRef();\n\n  const addTagHandler = () => {\n    const title = tagRef.current.value;\n    if (title === \"\") {\n      return;\n    }\n    const tag = {\n      key: uuidv4(),\n      title: title,\n    };\n    setAllTags((prevTags) => {\n      return [...prevTags, tag];\n    });\n    tagRef.current.value = null;\n  };\n\n  return (\n    <div className=\"w-full h-auto flex flex-wrap gap-2 whitespace-nowrap\">\n      {allTags.map((tag) => (\n        <TagItem key={tag.key} title={tag.title} color={`${tag.color}`} />\n      ))}\n      <div\n        className={`h-auto w-auto flex rounded-full overflow-hidden text-2xl bg-primary-200 dark:bg-primary-700 hover:bg-accent-400 dark:hover:bg-accent-400 text-black hover:text-white dark:text-white`}\n      >\n        <input\n          ref={tagRef}\n          className=\"bg-primary-200 text-sm px-2 my-auto text-base text-black dark:text-white dark:bg-primary-700 h-8 w-20 outline-none\"\n          aria-label=\"add tag\"\n        ></input>\n        <BiPlusCircle\n          className=\"my-auto m-1 cursor-pointer\"\n          onClick={addTagHandler}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function PageItem({ index, icon, title, color, selectPage }) {\n  return (\n    <div\n      className=\"w-full hover:bg-primary-100 bg-primary-200 dark:bg-primary-700 dark:hover:bg-primary-600 h-10 flex items-center text-black dark:text-white cursor-pointer\"\n      onClick={() => {\n        selectPage(index);\n      }}\n    >\n      <div className={`w-2 h-full bg-${color}-400`}></div>\n      <i className=\"text-2xl mx-2\">{icon}</i>\n      <h3 className=\"w-24 truncate\">{title}</h3>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { AiOutlineFileAdd } from \"react-icons/ai\";\nimport PageItem from \"./PageItem\";\nimport { BiChevronDown, BiChevronUp } from \"react-icons/bi\";\n\nexport default function PageSidebar({ allPages, selectPage, newPageHandler }) {\n  const [showLists, setShowLists] = useState(true);\n\n  const showListHandler = () => {\n    setShowLists(!showLists);\n  };\n\n  return (\n    <div className={`flex flex-col h-full text-black dark:text-white`}>\n      <div className=\"flex mt-4 mx-4\">\n        <div className=\"w-full font-bold\">ALL DOCUMENTS:</div>\n        <button onClick={showListHandler}>\n          <i className={`${showLists ? \"visible\" : \"hidden\"} text-2xl`}>\n            <BiChevronDown />\n          </i>\n          <i className={`${showLists ? \"hidden\" : \"visible\"} text-2xl`}>\n            <BiChevronUp />\n          </i>\n        </button>\n      </div>\n      <hr className=\"border-none h-0.5 bg-primary-300 dark:bg-primary-600 mx-4 my-2\" />\n      <div className={`flex-auto min-h-0 ${showLists ? \"visible\" : \"hidden\"}`}>\n        <div className=\"overflow-hidden overflow-y-auto h-full\">\n          {allPages.map((page, pageIndex) => (\n            <div key={page.id}>\n              <PageItem\n                index={pageIndex}\n                icon={page.icon}\n                title={page.title}\n                color={page.color}\n                selectPage={selectPage}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div\n        className={`flex-auto min-h-0 ${showLists ? \"hidden\" : \"visible\"}`}\n      ></div>\n      <hr className=\"border-none h-0.5 bg-gray-300 dark:bg-primary-600\" />\n      <button\n        className=\"h-12 flex-shrink-0 hover:bg-primary-300 dark:bg-primary-700 dark:hover:bg-primary-600 text-black dark:text-white flex items-center text-lg\"\n        onClick={newPageHandler}\n      >\n        <i className=\"text-2xl ml-4 mr-2\">\n          <AiOutlineFileAdd />\n        </i>\n        <h2>New Note</h2>\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TagList from \"./TagList\";\nimport PageSidebar from \"./PageSidebar\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport {\n  AiOutlineEye,\n  AiOutlineFileExclamation,\n  AiOutlineFileText,\n  AiOutlineFileImage,\n} from \"react-icons/ai\";\nimport { BiPencil, BiCaretDownCircle, BiCaretUpCircle } from \"react-icons/bi\";\n\n// import Editor from \"rich-markdown-editor\";\n\nexport default function Notes({ darkMode }) {\n  const data = [\n    {\n      id: uuidv4(),\n      icon: <AiOutlineFileExclamation />,\n      title: \"Note 1\",\n      color: \"red\",\n      content: \"\",\n      tags: [],\n      readOnly: false,\n    },\n    {\n      id: uuidv4(),\n      icon: <AiOutlineFileText />,\n      title: \"Note 2\",\n      color: \"yellow\",\n      content: \"\",\n      tags: [],\n      readOnly: false,\n    },\n    {\n      id: uuidv4(),\n      icon: <AiOutlineFileImage />,\n      title: \"Note 3\",\n      color: \"blue\",\n      content: \"\",\n      tags: [],\n      readOnly: false,\n    },\n  ];\n\n  const editorRef = useRef(null);\n\n  const [readOnly, setReadOnly] = useState(false);\n  const [viewModeDropdown, setViewModeDropdown] = useState(false);\n  const [allPages, setAllPages] = useState(data);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n\n  const readOnlyHandler = () => {\n    setReadOnly(!readOnly);\n  };\n\n  const viewModeDropdownHandler = () => {\n    setViewModeDropdown(!viewModeDropdown);\n  };\n\n  const selectPageHandler = (index) => {\n    setCurrentPageIndex(index);\n  };\n\n  const titleChangeHandler = (e) => {\n    let temp = allPages;\n    temp[currentPageIndex].title = e.target.value;\n    setAllPages([...temp]);\n  };\n\n  const newPageHandler = () => {\n    const newPage = {\n      id: uuidv4(),\n      icon: <AiOutlineFileText />,\n      title: \"Untitled note\",\n      color: \"gray\",\n      content: \"\",\n      tags: [],\n      readOnly: false,\n    };\n    setAllPages([...allPages, newPage]);\n    setCurrentPageIndex(allPages.length);\n  };\n\n  useEffect(() => {\n    setReadOnly(allPages[currentPageIndex].readOnly);\n  }, [currentPageIndex]);\n\n  const handleUpdate = (value, editor) => {\n    let temp = allPages;\n    temp[currentPageIndex].content = value;\n    setAllPages(temp);\n  };\n\n  return (\n    <div className=\"h-screen w-full bg-primary dark:bg-primary-900 flex\">\n      <div className=\"w-full h-auto mr-4 mt-4 mb-4 lg:mr-0\">\n        <div className=\"h-full rounded-2xl overflow-hidden transition-width flex flex-row \">\n          <div className=\"h-full\">\n            <div className=\"w-0 md:w-48 bg-primary-200 dark:bg-primary-700 h-full\">\n              <PageSidebar\n                allPages={allPages}\n                selectPage={selectPageHandler}\n                newPageHandler={newPageHandler}\n              />\n            </div>\n          </div>\n          <div className=\"w-full\">\n            <div\n              className={`w-full h-12 bg-${allPages[currentPageIndex].color}-400`}\n            ></div>\n            <div className=\"px-8 pt-8 bg-primary-100 dark:bg-primary-800 flex flex-col\">\n              <input\n                id=\"document-title\"\n                autoComplete=\"off\"\n                value={allPages[currentPageIndex].title}\n                onChange={titleChangeHandler}\n                className=\"h-12 bg-transparent text-black dark:text-white font-bold outline-none text-4xl mb-4\"\n                type=\"text\"\n                aria-label=\"document title\"\n              ></input>\n              <div className=\"flex\">\n                <div className=\"flex-auto\">\n                  <TagList />\n                </div>\n                <button\n                  className=\"w-20 h-8 bg-primary-200 dark:bg-primary-700 text-black dark:text-white rounded-full relative flex items-center\"\n                  onClick={viewModeDropdownHandler}\n                >\n                  <i className=\"text-2xl px-2\">\n                    {readOnly ? <AiOutlineEye /> : <BiPencil />}\n                  </i>\n                  <div className=\"text-2xl px-2\">\n                    {viewModeDropdown ? (\n                      <BiCaretDownCircle />\n                    ) : (\n                      <BiCaretUpCircle />\n                    )}\n                  </div>\n                  <div\n                    className={`${\n                      viewModeDropdown ? \"visible\" : \"hidden\"\n                    } absolute top-10 right-0 w-30 h-16 rounded-md bg-white dark:bg-primary-700 shadow-md overflow-hidden z-10`}\n                  >\n                    <div\n                      className={`w-full h-8 flex items-center px-2 cursor-pointer ${\n                        readOnly\n                          ? \"bg-primary-200 dark:bg-primary-900\"\n                          : \"hover:bg-primary-100 dark:hover:bg-primary-800\"\n                      }`}\n                      onClick={readOnlyHandler}\n                    >\n                      <i className=\"text-2xl\">\n                        <AiOutlineEye />\n                      </i>\n                      <h4 className=\"mx-1.5 whitespace-nowrap\">Viewing</h4>\n                    </div>\n                    <div\n                      className={`w-full h-8 flex items-center px-2 cursor-pointer ${\n                        readOnly\n                          ? \"hover:bg-primary-100 dark:hover:bg-primary-800\"\n                          : \"bg-primary-200 dark:bg-primary-900\"\n                      }`}\n                      onClick={readOnlyHandler}\n                    >\n                      <i className=\"text-2xl\">\n                        <BiPencil />\n                      </i>\n                      <h4 className=\"mx-1.5 whitespace-nowrap\">Editing</h4>\n                    </div>\n                  </div>\n                </button>\n              </div>\n              <div className=\"w-full h-4 bg-primary-100 dark:bg-primary-800\"></div>\n            </div>\n            <div className=\"px-8 overflow-hidden h-full bg-primary-100 dark:bg-primary-800 !text-black dark:!text-white\">\n              {/* <Editor\n                defaultValue=\"Hello world!\"\n                dark={darkMode}\n                readOnly={readOnly}\n              /> */}\n              <Editor\n                onInit={(evt, editor) => (editorRef.current = editor)}\n                key={[darkMode, currentPageIndex]}\n                id=\"tinymce-editor\"\n                onEditorChange={handleUpdate}\n                initialValue={allPages[currentPageIndex].content}\n                apiKey={process.env.REACT_APP_TINYMCE_API_KEY}\n                init={{\n                  // readonly: readOnly,\n                  skin: darkMode ? \"oxide-dark\" : \"oxide\",\n                  content_css: darkMode ? \"dark\" : \"default\",\n                  // icons: \"material\",\n                  height: \"calc(100% - 222px)\",\n                  // resize: true,\n                  menubar: false,\n                  plugins: [\n                    \"advlist autolink lists link image charmap print preview anchor\",\n                    \"searchreplace visualblocks code fullscreen preview emoticons print\",\n                    \"insertdatetime media table paste code help wordcount\",\n                  ],\n                  toolbar:\n                    \"undo redo | styleselect | bold italic | numlist bullist | alignleft aligncenter alignright alignjustify | outdent indent | link image emoticons | code | fullscreen print\",\n                  content_style:\n                    \"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }\",\n                }}\n              />\n              {/* <button onClick={log}>Log editor content</button> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function ReadingListItem({\n  index,\n  icon,\n  title,\n  color,\n  amount,\n  selectList,\n}) {\n  return (\n    <div\n      className=\"h-10 hover:bg-primary-300 dark:hover:bg-primary-600 text-black dark:text-white flex items-center cursor-pointer\"\n      onClick={() => selectList(index)}\n    >\n      <div className={`w-2 h-full bg-${color}-400`}></div>\n      <i className=\"text-2xl mx-2\">{icon}</i>\n      <h3 className=\"truncate w-24\">{title}</h3>\n      <p className=\"ml-auto mr-4 font-bold\">{amount}</p>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { BiChevronDown, BiChevronUp, BiListPlus } from \"react-icons/bi\";\nimport ReadingListItem from \"./ReadingListItem\";\n\nexport default function ReadingListSidebar({\n  allLists,\n  newListHandler,\n  selectList,\n}) {\n  const [showCategories, setShowCategories] = useState(true);\n  const [showLists, setShowLists] = useState(true);\n\n  const showCategoriesHandler = () => {\n    setShowCategories(!showCategories);\n  };\n\n  const showListHandler = () => {\n    setShowLists(!showLists);\n  };\n\n  return (\n    <div className={`flex flex-col h-full cursor-pointer`}>\n      <div className=\"flex mt-4 mx-4 text-black dark:text-white\">\n        <div className=\"w-full font-bold\">CATEGORIES:</div>\n        <button onClick={showCategoriesHandler}>\n          <i className={`${showCategories ? \"visible\" : \"hidden\"} text-2xl`}>\n            <BiChevronDown />\n          </i>\n          <i className={`${showCategories ? \"hidden\" : \"visible\"} text-2xl`}>\n            <BiChevronUp />\n          </i>\n        </button>\n      </div>\n      <hr className=\"border-none h-0.5 bg-gray-300 dark:bg-primary-600 mx-4 my-2\" />\n      <div className={`${showCategories ? \"visible\" : \"hidden\"}`}>\n        {allLists.slice(0, 5).map((list, listIndex) => (\n          <div key={list.id}>\n            <ReadingListItem\n              index={listIndex}\n              icon={list.icon}\n              title={list.title}\n              color={list.color}\n              selectList={selectList}\n            />\n          </div>\n        ))}\n      </div>\n      <div className=\"flex mt-4 mx-4 text-black dark:text-white\">\n        <div className=\"w-full font-bold\">MY LISTS:</div>\n        <button onClick={showListHandler}>\n          <i className={`${showLists ? \"visible\" : \"hidden\"} text-2xl`}>\n            <BiChevronDown />\n          </i>\n          <i className={`${showLists ? \"hidden\" : \"visible\"} text-2xl`}>\n            <BiChevronUp />\n          </i>\n        </button>\n      </div>\n      <hr className=\"border-none h-0.5 bg-gray-300 dark:bg-primary-600 mx-4 my-2\" />\n      <div className={`flex-auto min-h-0 ${showLists ? \"visible\" : \"hidden\"}`}>\n        <div className=\"overflow-hidden overflow-y-auto h-full\">\n          {allLists.slice(5).map((list, listIndex) => (\n            <div key={list.id}>\n              <ReadingListItem\n                // Set index to be offset by 4 (list categories)\n                index={listIndex + 5}\n                title={list.title}\n                amount={Object.keys(list.books).length}\n                color={list.color}\n                icon={list.icon}\n                selectList={selectList}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div\n        className={`flex-auto min-h-0 ${showLists ? \"hidden\" : \"visible\"}`}\n      ></div>\n      <hr className=\"border-none h-0.5 bg-gray-300 dark:bg-primary-600\" />\n      <button\n        className=\"h-12 flex-shrink-0 hover:bg-primary-300 dark:bg-primary-700 dark:hover:bg-primary-600 text-black dark:text-white flex items-center text-lg\"\n        onClick={newListHandler}\n      >\n        <i className=\"text-2xl ml-4 mr-2\">\n          <BiListPlus />\n        </i>\n        <h2>New List</h2>\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  BiTrash,\n  BiCaretRightCircle,\n  BiCaretDownCircle,\n  BiChevronLeft,\n  BiChevronRight,\n  BiHeart,\n} from \"react-icons/bi\";\nimport Rating from \"react-rating\";\nimport { FaRegStar } from \"react-icons/fa\";\n\nexport default function BookItem({\n  id,\n  title,\n  author,\n  description,\n  rating,\n  type,\n  progress,\n  expanded,\n  deleteBook,\n  updateComponent,\n  isDragging,\n  favorite,\n}) {\n  const [bookTitle, setBookTitle] = useState(title);\n  const [bookAuthor, setBookAuthor] = useState(author);\n  const [bookDescription, setBookDescription] = useState(description);\n  const [bookRating, setBookRating] = useState(rating);\n  const [bookType, setBookType] = useState(type);\n  const [bookProgress, setBookProgress] = useState(progress);\n  const [bookExpanded, setBookExpanded] = useState(expanded);\n  const [progressColor, setProgressColor] = useState();\n  const [bookFavorite, setBookFavorite] = useState(favorite);\n\n  const titleChangeHandler = (e) => {\n    setBookTitle(e.target.value);\n  };\n\n  const descriptionChangeHandler = (e) => {\n    setBookDescription(e.target.value);\n  };\n\n  const authorChangeHandler = (e) => {\n    setBookAuthor(e.target.value);\n  };\n\n  const toggleExpandedHandler = () => {\n    setBookExpanded(!bookExpanded);\n  };\n\n  const toggleFavoriteHandler = () => {\n    setBookFavorite(!bookFavorite);\n  };\n\n  useEffect(() => {\n    updateComponent(\n      id,\n      bookTitle,\n      bookAuthor,\n      bookDescription,\n      bookRating,\n      bookType,\n      bookProgress,\n      bookFavorite,\n      bookExpanded\n    );\n  }, [\n    bookAuthor,\n    bookDescription,\n    bookExpanded,\n    bookProgress,\n    bookRating,\n    bookTitle,\n    bookFavorite,\n    bookType,\n  ]);\n\n  const progressSelect = (step) => {\n    const progressArray = [\"Not started\", \"In progress\", \"Complete\"];\n    let progressIndex = progressArray.indexOf(bookProgress);\n    progressIndex = (progressIndex + step) % progressArray.length;\n    setBookProgress(progressArray[progressIndex]);\n  };\n\n  const bookTypeSelect = (step) => {\n    const progressArray = [\"Paperback\", \"E-book\", \"Audiobook\", \"Article\"];\n    let progressIndex = progressArray.indexOf(bookType);\n    progressIndex = (progressIndex + step) % progressArray.length;\n    setBookType(progressArray[progressIndex]);\n  };\n\n  useEffect(() => {\n    switch (bookProgress) {\n      case \"In progress\":\n        setProgressColor(\"yellow\");\n        break;\n      case \"Complete\":\n        setProgressColor(\"green\");\n        break;\n      default:\n        setProgressColor(\"red\");\n        break;\n    }\n  }, [bookProgress]);\n\n  return (\n    <div\n      className={`w-full h-auto bg-primary-200 dark:bg-primary-700 flex p-2 rounded-md cursor-pointer mb-2 ${\n        isDragging ? \"shadow-lg\" : \"\"\n      }`}\n    >\n      <i\n        className=\"text-2xl ml-2 w-6 h-6 my-1 rounded-full flex items-center justify-center text-primary-400 dark:text-primary-500\"\n        onClick={toggleExpandedHandler}\n      >\n        {bookExpanded ? <BiCaretDownCircle /> : <BiCaretRightCircle />}\n      </i>\n      <div className=\"text-black dark:text-white ml-2 flex-auto flex flex-col\">\n        <div className=\"flex items-center h-8\">\n          <input\n            placeholder=\"Untitled book\"\n            type=\"text\"\n            value={bookTitle}\n            onChange={titleChangeHandler}\n            className={`w-0 text-lg h-8 flex-auto mr-4 truncate bg-transparent outline-none`}\n          ></input>\n          <div className=\"flex text-black dark:text-white gap-2 items-center\">\n            <div className=\"flex flex-col relative\">\n              <div\n                className={`text-sm rounded-md border-[3px] border-${progressColor}-400 box-border flex w-28 h-8 flex items-center overflow-hidden`}\n              >\n                <div\n                  className={`text-black dark:text-white text-lg w-8 h-full flex items-center justify-center`}\n                  onClick={() => {\n                    progressSelect(2);\n                  }}\n                >\n                  <BiChevronLeft />\n                </div>\n                <p className=\"text-black dark:text-white cursor-pointer w-full text-center noselect\">\n                  {bookProgress}\n                </p>\n                <div\n                  className={`text-black dark:text-white text-lg w-8 h-full flex items-center justify-center`}\n                  onClick={() => {\n                    progressSelect(1);\n                  }}\n                >\n                  <BiChevronRight />\n                </div>\n              </div>\n            </div>\n            <button\n              className={`${\n                bookFavorite ? \"!bg-pink-400 text-white\" : \"\"\n              } w-8 h-8 flex items-center justify-center rounded-md bg-primary-100 hover:bg-pink-400 dark:bg-primary-800 dark:text-white dark:hover:bg-pink-400 text-black hover:text-white text-2xl`}\n              onClick={toggleFavoriteHandler}\n            >\n              <BiHeart />\n            </button>\n          </div>\n        </div>\n        <div\n          className={`${\n            bookExpanded ? \"visible\" : \"hidden\"\n          } w-full h-auto mt-2 flex`}\n        >\n          <div className=\"flex flex-col flex-auto\">\n            <div className=\"flex text-sm\">\n              <h4>Author:</h4>\n              <input\n                className=\"bg-transparent ml-2 outline-none\"\n                placeholder=\"Author name\"\n                value={bookAuthor}\n                onChange={authorChangeHandler}\n              ></input>\n            </div>\n            <textarea\n              placeholder=\"Add a description...\"\n              value={bookDescription}\n              onChange={descriptionChangeHandler}\n              className=\"text-sm bg-transparent mt-1 h-full min-h-[48px] outline-none resize-y text-primary-700 dark:text-primary-300 max-h-[12rem]\"\n            ></textarea>\n          </div>\n          <div className=\"flex flex-col\">\n            <div\n              className={`text-sm rounded-md ml-2 bg-primary-100 dark:bg-primary-800 text-black dark:text-white flex w-28 h-8 flex items-center overflow-hidden`}\n            >\n              <div\n                className={`text-lg w-8 h-full flex items-center justify-center`}\n                onClick={() => {\n                  bookTypeSelect(3);\n                }}\n              >\n                <BiChevronLeft />\n              </div>\n              <p className=\"cursor-pointer w-full text-center noselect\">\n                {bookType === null ? (\n                  <p className=\"text-primary-500 dark:text-primary-400\">\n                    Select type\n                  </p>\n                ) : (\n                  bookType\n                )}\n              </p>\n              <div\n                className={`text-lg w-8 h-full flex items-center justify-center`}\n                onClick={() => {\n                  bookTypeSelect(1);\n                }}\n              >\n                <BiChevronRight />\n              </div>\n            </div>\n            <div className=\"w-28 mt-2 justify-center ml-2 h-8 bg-primary-100 dark:bg-primary-800 rounded-md flex items-center pt-1.5\">\n              <Rating\n                initialRating={bookRating}\n                fractions={2}\n                emptySymbol={\n                  <FaRegStar className=\"text-primary-400 dark:text-primary-500 text-xl\" />\n                }\n                fullSymbol={<FaRegStar className=\"text-xl\" />}\n                onChange={(rate) => {\n                  setBookRating(rate);\n                }}\n              />\n            </div>\n          </div>\n          <button\n            className=\"ml-2 w-8 h-8 flex items-center justify-center rounded-md bg-primary-100 hover:bg-red-400 dark:bg-primary-800 dark:text-white dark:hover:bg-red-400 text-black hover:text-white text-2xl\"\n            aria-label=\"delete task\"\n            onClick={() => {\n              deleteBook(id);\n            }}\n          >\n            <BiTrash />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReadingListSidebar from \"./ReadingListSidebar\";\nimport BookItem from \"./BookItem\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  BiChevronDown,\n  BiListUl,\n  BiTrash,\n  BiPlus,\n  BiCaretDownCircle,\n  BiCaretUpCircle,\n} from \"react-icons/bi\";\nimport ConfirmModal from \"../ui/ConfirmModal\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nexport default function ReadingList({ readingListData }) {\n  const [allLists, setAllLists] = useState(readingListData);\n  const [currentListIndex, setCurrentListIndex] = useState(4);\n  const [colorDropdown, setColorDropdown] = useState(false);\n  const [showColorSelector, setShowColorSelector] = useState(true);\n  const [deleteConfirmation, setDeleteConfirmation] = useState(false);\n  const [bookList, setBookList] = useState();\n  const [bookTypeFilter, setBookTypeFilter] = useState(\"Paperback\");\n  const [typeDropdown, setTypeDropdown] = useState(false);\n\n  const toggleTypeDropdown = () => {\n    setTypeDropdown(!typeDropdown);\n  };\n\n  const setBookType = (type) => {\n    setBookTypeFilter(type);\n    setTypeDropdown(false);\n  };\n\n  const updateBookHandler = (\n    id,\n    bookTitle,\n    bookAuthor,\n    bookDescription,\n    bookRating,\n    bookType,\n    bookProgress,\n    bookFavorite,\n    bookExpanded\n  ) => {\n    let tempTask = {\n      id: id,\n      title: bookTitle,\n      author: bookAuthor,\n      description: bookDescription,\n      rating: bookRating,\n      type: bookType,\n      progress: bookProgress,\n      favorite: bookFavorite,\n      expanded: bookExpanded,\n    };\n    allLists.forEach((list, i) =>\n      list.books.forEach((task, j) => {\n        if (task.id === tempTask.id) {\n          let temp = allLists;\n          temp[i].books[j] = tempTask;\n          setAllLists([...temp]);\n        }\n      })\n    );\n  };\n\n  // Function to change current list to selected list\n  const selectListHandler = (index) => {\n    setCurrentListIndex(index);\n  };\n\n  // Manage color dropdown state\n  const handleColorDropdown = () => {\n    setColorDropdown(!colorDropdown);\n  };\n\n  // Function to update color for current list\n  const listColorHandler = (newColor) => {\n    let temp = allLists;\n    temp[currentListIndex].color = newColor;\n    setAllLists([...temp]);\n    setColorDropdown(false);\n  };\n\n  // Function to change list title\n  const titleChangeHandler = (e) => {\n    if (currentListIndex >= 5) {\n      let temp = allLists;\n      temp[currentListIndex].title = e.target.value;\n      setAllLists([...temp]);\n    }\n  };\n\n  // Deleting tasks based on their index in currentList.tasks\n  const deleteBookHandler = (id) => {\n    allLists.forEach((list, i) =>\n      list.books.forEach((task, j) => {\n        if (task.id === id) {\n          let temp = allLists;\n          temp[i].books.splice(j, 1);\n          setAllLists([...temp]);\n        }\n      })\n    );\n  };\n\n  const newBookHandler = () => {\n    let temp = allLists;\n    temp[currentListIndex].books.push({\n      id: uuidv4(),\n      title: \"\",\n      author: \"\",\n      description: \"\",\n      rating: null,\n      type: null,\n      progress: \"Not started\",\n      favorite: false,\n      expanded: true,\n    });\n    setAllLists([...temp]);\n  };\n\n  // Adding a new list to the end of allLists\n  const newListHandler = () => {\n    const newList = {\n      id: uuidv4(),\n      title: \"Untitled list\",\n      color: \"gray\",\n      icon: <BiListUl />,\n      books: [],\n    };\n    setAllLists([...allLists, newList]);\n    setCurrentListIndex(allLists.length);\n  };\n\n  const deleteListHandler = () => {\n    setDeleteConfirmation(false);\n    const temp = allLists;\n    temp.splice(currentListIndex, 1);\n    setAllLists([...temp]);\n    setCurrentListIndex(allLists.length - 1);\n  };\n\n  const toggleDeleteConfirmation = () => {\n    setDeleteConfirmation(!deleteConfirmation);\n  };\n\n  useEffect(() => {\n    if (currentListIndex < 5) {\n      setShowColorSelector(false);\n    } else {\n      setShowColorSelector(true);\n    }\n  }, [currentListIndex]);\n\n  const handleOnDragEnd = (result) => {\n    if (!result.destination) return;\n    const items = Array.from(allLists[currentListIndex].books);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    let temp = allLists;\n    temp[currentListIndex].books = [...items];\n\n    setAllLists([...temp]);\n  };\n\n  useEffect(() => {\n    const inProgressFilter = (task) => task.progress === \"In progress\";\n    const completedFilter = (task) => task.progress === \"Complete\";\n    const favoritesFilter = (task) => task.favorite === true;\n    const bookFilter = (task) => task.type === bookTypeFilter;\n    const allTaskFilter = (task) => task;\n\n    let taskFilter;\n    let sliceStart;\n    let sliceEnd;\n\n    switch (currentListIndex) {\n      case 0:\n        taskFilter = inProgressFilter;\n        break;\n      case 1:\n        taskFilter = completedFilter;\n        break;\n      case 2:\n        taskFilter = bookFilter;\n        break;\n      case 3:\n        taskFilter = favoritesFilter;\n        break;\n      case 4:\n        taskFilter = allTaskFilter;\n        break;\n      default:\n        sliceStart = currentListIndex;\n        sliceEnd = currentListIndex + 1;\n        taskFilter = allTaskFilter;\n        break;\n    }\n    setBookList(\n      allLists.slice(sliceStart, sliceEnd).map((list) =>\n        list.books.filter(taskFilter).map((book, index) => (\n          <Draggable\n            key={book.id}\n            draggableId={book.id}\n            index={index}\n            isDragDisabled={currentListIndex < 5}\n          >\n            {(provided, snapshot) => (\n              <div\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n              >\n                <BookItem\n                  id={book.id}\n                  title={book.title}\n                  author={book.author}\n                  description={book.description}\n                  rating={book.rating}\n                  type={book.type}\n                  progress={book.progress}\n                  startDate={book.startDate}\n                  endDate={book.endDate}\n                  favorite={book.favorite}\n                  expanded={book.expanded}\n                  updateComponent={updateBookHandler}\n                  deleteBook={deleteBookHandler}\n                  isDragging={snapshot.isDragging}\n                />\n              </div>\n            )}\n          </Draggable>\n        ))\n      )\n    );\n  }, [currentListIndex, allLists, bookTypeFilter]);\n\n  return (\n    <div className=\"h-screen flex bg-primary dark:bg-primary-900\">\n      <div className=\"my-4 mr-4 lg:mr-0 w-full\">\n        <div className=\"h-full rounded-2xl flex overflow-hidden\">\n          <div className=\"h-full\">\n            <div className=\"w-0 md:w-48 bg-primary-200 dark:bg-primary-700 h-full\">\n              <ReadingListSidebar\n                allLists={allLists}\n                selectList={selectListHandler}\n                newListHandler={newListHandler}\n              />\n            </div>\n          </div>\n          <div className=\"w-full h-full\">\n            <div className=\"bg-primary-100 dark:bg-primary-800 h-full\">\n              <div\n                className={`w-full h-12 bg-${allLists[currentListIndex].color}-400`}\n              ></div>\n              <div className=\"h-12 mx-8 mt-8 flex flex-row items-center\">\n                <input\n                  className=\"flex-auto bg-transparent truncate text-black dark:text-white font-bold outline-none text-4xl\"\n                  autoComplete=\"off\"\n                  value={allLists[currentListIndex].title}\n                  onChange={titleChangeHandler}\n                  type=\"text\"\n                  aria-label=\"list title\"\n                ></input>\n                <div\n                  className={`${\n                    showColorSelector ? \"visible\" : \"hidden\"\n                  } relative w-8 h-8 rounded-full bg-${\n                    allLists[currentListIndex].color\n                      ? `${allLists[currentListIndex].color}-400 text-white`\n                      : \"primary-200 text-black\"\n                  } text-2xl flex items-center justify-center hover:bg-${\n                    allLists[currentListIndex].color\n                  }-400/80`}\n                  onClick={handleColorDropdown}\n                >\n                  <BiChevronDown />\n                  <div\n                    className={`${\n                      colorDropdown ? \"visible\" : \"hidden\"\n                    } absolute top-10 -left-2 w-12 bg-white dark:bg-primary-600 rounded-md shadow-md z-10`}\n                  >\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full bg-red-400 hover:bg-red-400/80\"\n                      onClick={() => listColorHandler(\"red\")}\n                    ></div>\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full bg-yellow-400 hover:bg-yellow-400/80\"\n                      onClick={() => listColorHandler(\"yellow\")}\n                    ></div>\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full bg-green-400 hover:bg-green-400/80\"\n                      onClick={() => listColorHandler(\"green\")}\n                    ></div>\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full bg-blue-400 hover:bg-blue-400/80\"\n                      onClick={() => listColorHandler(\"blue\")}\n                    ></div>\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full bg-purple-400 hover:bg-purple-400/80\"\n                      onClick={() => listColorHandler(\"purple\")}\n                    ></div>\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full bg-gray-400 hover:bg-gray-400/80\"\n                      onClick={() => listColorHandler(\"gray\")}\n                    ></div>\n                    <div\n                      className=\"w-8 h-8 m-2 rounded-full border-gray-400 border-2 hover:bg-gray-200\"\n                      onClick={() => listColorHandler(false)}\n                    ></div>\n                  </div>\n                </div>\n                <div\n                  className={`${\n                    showColorSelector ? \"visible\" : \"hidden\"\n                  } relative w-8 h-8 rounded-full bg-primary-200 hover:bg-red-400 dark:bg-primary-700 dark:text-white dark:hover:bg-red-400 text-black hover:text-white text-2xl ml-2 flex items-center justify-center`}\n                  onClick={toggleDeleteConfirmation}\n                >\n                  <BiTrash />\n                </div>\n                <ConfirmModal\n                  message={`\"${allLists[currentListIndex].title}\"`}\n                  deleteConfirmation={deleteConfirmation}\n                  toggleDeleteConfirmation={toggleDeleteConfirmation}\n                  deleteListHandler={deleteListHandler}\n                />\n              </div>\n              <div className=\"\">\n                <div\n                  className={`${\n                    currentListIndex === 2 ? \"visible\" : \"hidden\"\n                  } h-6 px-8 text-black dark:text-white relative`}\n                >\n                  <div className=\"w-36 h-6 bg-primary-200 dark:bg-primary-700 text-sm flex items-center px-2 rounded-md\">\n                    <p className=\"flex-auto\">Filter: {bookTypeFilter}</p>\n                    {typeDropdown ? (\n                      <BiCaretDownCircle\n                        className=\"ml-2 text-lg\"\n                        onClick={toggleTypeDropdown}\n                      />\n                    ) : (\n                      <BiCaretUpCircle\n                        className=\"ml-2 text-lg\"\n                        onClick={toggleTypeDropdown}\n                      />\n                    )}\n                  </div>\n                  <div\n                    className={`${\n                      typeDropdown ? \"visible\" : \"hidden\"\n                    } absolute w-36 noselect h-24 top-8 rounded-md bg-white dark:bg-primary-600 shadow-md text-sm flex flex-col overflow-hidden`}\n                  >\n                    <div\n                      className=\"w-full h-6 flex items-center hover:bg-primary-100 dark:hover:bg-primary-500 cursor-pointer px-2\"\n                      onClick={() => setBookType(\"Paperback\")}\n                    >\n                      Paperback\n                    </div>\n                    <div\n                      className=\"w-full h-6 flex items-center hover:bg-primary-100 dark:hover:bg-primary-500 cursor-pointer px-2\"\n                      onClick={() => setBookType(\"E-book\")}\n                    >\n                      E-book\n                    </div>\n                    <div\n                      className=\"w-full h-6 flex items-center hover:bg-primary-100 dark:hover:bg-primary-500 cursor-pointer px-2\"\n                      onClick={() => setBookType(\"Audiobook\")}\n                    >\n                      Audiobook\n                    </div>\n                    <div\n                      className=\"w-full h-6 flex items-center hover:bg-primary-100 dark:hover:bg-primary-500 cursor-pointer px-2\"\n                      onClick={() => setBookType(\"Article\")}\n                    >\n                      Article\n                    </div>\n                  </div>\n                </div>\n                <div className=\"overflow-y-auto overflow-hidden no-scrollbar h-[calc(100vh-10rem)] pb-16\">\n                  <DragDropContext onDragEnd={handleOnDragEnd}>\n                    <Droppable droppableId=\"reminders\">\n                      {(provided, snapshot) => (\n                        <div\n                          className={`${\n                            snapshot.isDraggingOver ? \"ring-2\" : \"ring-none\"\n                          } ring-primary-300 dark:ring-primary-600 mx-4 mb-4 mt-1 px-4 pt-4 pb-2 rounded-md flex flex-col`}\n                          {...provided.droppableProps}\n                          ref={provided.innerRef}\n                        >\n                          {bookList}\n                          {provided.placeholder}\n                        </div>\n                      )}\n                    </Droppable>\n                  </DragDropContext>\n                  <div\n                    className={`${\n                      currentListIndex > 4 ? \"visible\" : \"hidden\"\n                    } mx-8 border-2 border-primary-400 dark:border-primary-500 rounded-md min-h-[2.5rem] flex items-center justify-center cursor-pointer border-dashed hover:border-solid hover:bg-primary-200 transition-all dark:hover:bg-primary-700`}\n                    onClick={newBookHandler}\n                  >\n                    <i className=\"text-2xl text-primary-600 dark:text-primary-400\">\n                      <BiPlus />\n                    </i>\n                    <h3 className=\"text-primary-600 dark:text-primary-400\">\n                      Add new book\n                    </h3>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Extras() {\n  return (\n    <div>\n      <h1>Extras Page</h1>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Settings() {\n  return (\n    <div>\n      <h1>Settings Page</h1>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function SideItem({ taskName, color, type, dueDate }) {\n  return (\n    <div className=\"bg-primary-100 dark:bg-primary-800 w-auto rounded-2xl overflow-hidden flex px-4\">\n      <div className=\"my-2\">\n        <p className=\"\">{taskName}</p>\n        <p className=\"text-primary-500\">{dueDate}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function SideWidget({ eventName, countdown, timeUnit }) {\n  return (\n    <div\n      className={`bg-primary-100 dark:bg-primary-800 p-2 w-[120px] h-[120px] rounded-2xl flex flex-col justify-center text-center text-black dark:text-white`}\n    >\n      <h3 className=\"font-bold\">{eventName}</h3>\n      <p className=\"text-5xl mx-2 text-accent-400\">{countdown}</p>\n      <p>{timeUnit}</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function SideStickie({ title, content }) {\n  return (\n    <div className=\"w-full mb-4 h-auto p-4 bg-primary-100 dark:bg-primary-800 rounded-2xl text-black dark:text-white\">\n      <h3 className=\"text-xl font-bold\">{title}Title</h3>\n      <p className=\"text-sm\">\n        {content}Consequat fugiat occaecat dolore tempor. Anim id qui ea mollit\n        in sunt velit labore anim dolore non elit. Amet sunt laboris velit irure\n        mollit nostrud aute commodo tempor est incididunt quis.\n      </p>\n    </div>\n  );\n}\n","import { useState, createContext } from \"react\";\n\nexport const SettingsContext = createContext();\n\nfunction SettingsContextProvider(props) {\n  const [pomodoro, setPomodoro] = useState(0);\n  const [executing, setExecuting] = useState({});\n  const [startAnimate, setStartAnimate] = useState(false);\n\n  function setCurrentTimer(active_state) {\n    updateExecute({\n      ...executing,\n      active: active_state,\n    });\n    setTimerTime(executing);\n  }\n\n  // start animation fn\n  function startTimer() {\n    setStartAnimate(true);\n  }\n  // pause animation fn\n  function pauseTimer() {\n    setStartAnimate(false);\n  }\n  // pass time to counter\n  const children = ({ remainingTime }) => {\n    return new Date(remainingTime * 1000).toISOString().substr(12, 7);\n  };\n\n  // clear session storage\n  const SettingsBtn = () => {\n    setExecuting({});\n    setPomodoro(0);\n  };\n\n  const updateExecute = (updatedSettings) => {\n    setExecuting(updatedSettings);\n    setTimerTime(updatedSettings);\n  };\n\n  const setTimerTime = (evaluate) => {\n    switch (evaluate.active) {\n      case \"work\":\n        setPomodoro(evaluate.work);\n        break;\n      case \"short\":\n        setPomodoro(evaluate.short);\n        break;\n      case \"long\":\n        setPomodoro(evaluate.long);\n        break;\n      default:\n        setPomodoro(0);\n        break;\n    }\n  };\n\n  function stopAnimate() {\n    setStartAnimate(false);\n    props.setTimerComplete(true);\n  }\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        pomodoro,\n        executing,\n        updateExecute,\n        startAnimate,\n        startTimer,\n        pauseTimer,\n        children,\n        SettingsBtn,\n        setCurrentTimer,\n        stopAnimate,\n      }}\n    >\n      {props.children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport default SettingsContextProvider;\n","import { useContext } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport { SettingsContext } from \"./SettingsContext\";\nconst CountdownAnimation = ({ key, timer, animate, children }) => {\n  const { stopAnimate } = useContext(SettingsContext);\n\n  return (\n    <CountdownCircleTimer\n      key={key}\n      isPlaying={animate}\n      duration={timer * 60}\n      colors={[\n        [\"#3b82f6\", 0.33],\n        [\"#3b82f6\", 0.33],\n        [\"#3b82f6\", 0.33],\n      ]}\n      strokeWidth={6}\n      size={140}\n      trailColor=\"#b0b5bf\"\n      onComplete={() => {\n        stopAnimate();\n      }}\n    >\n      {children}\n    </CountdownCircleTimer>\n  );\n};\n\nexport default CountdownAnimation;\n","import React, { useContext, useState } from \"react\";\nimport { SettingsContext } from \"./SettingsContext\";\n\nconst SetPomodoro = () => {\n  const [newTimer, setNewTimer] = useState({\n    work: 25,\n    short: 5,\n    long: 15,\n    active: \"work\",\n  });\n\n  const { updateExecute } = useContext(SettingsContext);\n\n  const handleChange = (input) => {\n    const { name, value } = input.target;\n    switch (name) {\n      case \"work\":\n        setNewTimer({\n          ...newTimer,\n          work: parseInt(value),\n        });\n        break;\n      case \"shortBreak\":\n        setNewTimer({\n          ...newTimer,\n          short: parseInt(value),\n        });\n        break;\n      case \"longBreak\":\n        setNewTimer({\n          ...newTimer,\n          long: parseInt(value),\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateExecute(newTimer);\n  };\n  return (\n    <div className=\"w-full h-full text-center\">\n      <form noValidate onSubmit={handleSubmit}>\n        <button\n          className=\"w-24 h-8 rounded-md bg-primary-200 dark:bg-primary-700 text-black dark:text-white hover:bg-accent-400 hover:text-white dark:hover:bg-accent-400\"\n          type=\"submit\"\n        >\n          Start timer\n        </button>\n        <h3 className=\"mt-4 font-semibold text-xl mb-2\">Time in minutes:</h3>\n        <div className=\"flex gap-4 justify-center\">\n          <div className=\"flex flex-col\">\n            <input\n              className=\"w-16 h-16 outline-none rounded-full border-4 flex items-center text-center text-lg border-accent-400 bg-red-200 text-black dark:text-white bg-primary-200 dark:bg-primary-700\"\n              type=\"number\"\n              name=\"work\"\n              onChange={handleChange}\n              value={newTimer.work}\n              min=\"10\"\n              max=\"180\"\n            />\n            <h4>Work</h4>\n          </div>\n          <div className=\"flex flex-col\">\n            <input\n              className=\"w-16 h-16 outline-none rounded-full border-4 flex items-center text-center text-lg border-accent-400 bg-red-200 text-black dark:text-white bg-primary-200 dark:bg-primary-700\"\n              type=\"number\"\n              name=\"shortBreak\"\n              onChange={handleChange}\n              value={newTimer.short}\n              min=\"2\"\n              max=\"30\"\n            />\n            <h4>Break</h4>\n          </div>\n          {/* <input\n            className=\"w-16 h-16 outline-none rounded-full border-4 flex items-center text-center text-lg border-accent-400 bg-red-200 text-black dark:text-white bg-primary-200 dark:bg-primary-700\"\n            type=\"number\"\n            name=\"longBreak\"\n            onChange={handleChange}\n            value={newTimer.long}\n          /> */}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SetPomodoro;\n","import React, { useEffect, useContext } from \"react\";\nimport CountdownAnimation from \"./CountdownAnimation\";\nimport SetPomodoro from \"./SetPomodoro\";\nimport { SettingsContext } from \"./SettingsContext\";\n\nimport \"./pomodoro.css\";\nimport { BiCog } from \"react-icons/bi\";\n\nexport default function SidePomodoro() {\n  const {\n    pomodoro,\n    executing,\n    startAnimate,\n    children,\n    startTimer,\n    pauseTimer,\n    updateExecute,\n    setCurrentTimer,\n    SettingsBtn,\n  } = useContext(SettingsContext);\n\n  useEffect(() => {\n    updateExecute(executing);\n    return () => {};\n  }, [executing, startAnimate]);\n\n  return (\n    <div className=\"w-full h-[17.5rem] bg-primary-100 dark:bg-primary-800 rounded-2xl p-4\">\n      <div>\n        {pomodoro !== 0 ? (\n          <div className=\"flex flex-col\">\n            <ul className=\"list-none flex gap-2 justify-center mb-4\">\n              <li>\n                <button\n                  className={`${\n                    executing.active === \"work\"\n                      ? \"!bg-accent-400 text-white\"\n                      : \"\"\n                  } px-2 h-8 text-black dark:text-white flex items-center justify-center rounded-md bg-primary-200 dark:bg-primary-700 cursor-pointer`}\n                  onClick={() => {\n                    setCurrentTimer(\"work\");\n                  }}\n                >\n                  Work\n                </button>\n              </li>\n              <li>\n                <button\n                  className={`${\n                    executing.active === \"short\"\n                      ? \"!bg-accent-400 text-white\"\n                      : \"\"\n                  } px-2 h-8 text-black dark:text-white flex items-center justify-center rounded-md bg-primary-200 dark:bg-primary-700 cursor-pointer`}\n                  onClick={() => {\n                    setCurrentTimer(\"short\");\n                  }}\n                >\n                  Short Break\n                </button>\n              </li>\n              <li>\n                <button\n                  className={`w-8 h-8 text-lg text-black dark:text-white flex items-center justify-center rounded-md bg-primary-200 dark:bg-primary-700 cursor-pointer`}\n                  onClick={SettingsBtn}\n                >\n                  <BiCog />\n                </button>\n              </li>\n            </ul>\n            <div className=\"flex items-center justify-center\">\n              <div className=\"flex items-center justify-center h-[9.5rem] w-[9.5rem] rounded-full text-white bg-primary-200 dark:bg-primary-700 text-4xl\">\n                <CountdownAnimation\n                  key={pomodoro}\n                  timer={pomodoro}\n                  animate={startAnimate}\n                >\n                  {children}\n                </CountdownAnimation>\n              </div>\n            </div>\n            <div className=\"flex items-center justify-center gap-2 mt-4\">\n              <div\n                className=\"w-16 h-8 rounded-md bg-primary-200 text-black dark:text-white hover:bg-accent-400 dark:hover:bg-accent-400 cursor-pointer hover:text-white dark:bg-primary-700 flex items-center justify-center\"\n                onClick={startTimer}\n              >\n                Start\n              </div>\n              <div\n                className=\"w-16 h-8 rounded-md bg-primary-200 text-black dark:text-white hover:bg-accent-400 dark:hover:bg-accent-400 cursor-pointer hover:text-white dark:bg-primary-700 flex items-center justify-center\"\n                onClick={pauseTimer}\n              >\n                Pause\n              </div>\n            </div>\n          </div>\n        ) : (\n          <SetPomodoro />\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Calendar from \"react-calendar\";\nimport SideItem from \"./SideItem\";\nimport SideWidget from \"./SideWidget\";\nimport SideStickie from \"./SideStickie\";\n\nimport SettingsContextProvider from \"./SettingsContext\";\n\nimport \"./calendar.css\";\n\nimport { BiAdjust, BiBriefcaseAlt, BiMoon } from \"react-icons/bi\";\nimport SidePomodoro from \"./SidePomodoro\";\n\nexport default function SidePanel({\n  onClick,\n  credits,\n  setCredits,\n  workMode,\n  toggleWorkMode,\n  setTimerComplete,\n}) {\n  const USERNAME = \"Username\";\n\n  return (\n    <SettingsContextProvider setTimerComplete={setTimerComplete}>\n      <div className={`w-72 h-screen`}>\n        <div className=\"flex gap-4 h-20 bg-primary dark:bg-primary-900 p-4\">\n          <div className=\"w-32 flex gap-2 items-center h-12 bg-primary-100 dark:bg-primary-800 rounded-2xl px-3 justify-center text-black dark:text-white\">\n            <div className=\"text-2xl\">\n              <BiBriefcaseAlt />\n            </div>\n            <button\n              className=\"w-10 h-6 bg-accent-400 rounded-full flex items-center justify-center px-1\"\n              onClick={toggleWorkMode}\n            >\n              <div\n                className={`w-4 h-4 rounded-full bg-white transition-transform ${\n                  workMode ? \"-translate-x-2\" : \"translate-x-2\"\n                }`}\n              ></div>\n            </button>\n            <div className=\"text-2xl\">\n              <BiMoon />\n            </div>\n          </div>\n          <button className=\"w-12 h-12 bg-primary-100 dark:bg-primary-800 dark:hover:bg-accent-400 hover:bg-accent-400 rounded-2xl flex items-center justify-center text-2xl hover:text-white dark:text-white\"></button>\n          <button\n            onClick={onClick}\n            className=\"w-12 h-12 bg-primary-100 dark:bg-primary-800 dark:hover:bg-accent-400 hover:bg-accent-400 rounded-2xl flex items-center justify-center text-2xl hover:text-white dark:text-white\"\n          >\n            <div className=\"dark:rotate-180 duration-500 transition-transform\">\n              <BiAdjust />\n            </div>\n          </button>\n        </div>\n        <div className=\"h-[calc(100%-5rem)] bg-primary dark:bg-primary-900 overflow-y-auto overflow-hidden no-scrollbar px-4 flex flex-col gap-4 text-black dark:text-white\">\n          <div>\n            <div className=\"w-full h-auto bg-primary-100 dark:bg-primary-800 rounded-2xl flex\">\n              <div className=\"my-4\">\n                <p className=\"mx-4 text-xl\">Hello,</p>\n                <p className=\"mx-4 text-3xl font-bold\">{USERNAME}</p>\n              </div>\n              <div className=\"w-16 h-16 ml-auto my-auto mr-4 rounded-full bg-accent-400\"></div>\n            </div>\n          </div>\n          <div>\n            <SidePomodoro />\n          </div>\n          <div>\n            <Calendar calendarType=\"US\" />\n          </div>\n          <div className=\"flex gap-4\">\n            <SideWidget eventName=\"Test event\" countdown=\"6\" timeUnit=\"days\" />\n            <SideWidget\n              eventName=\"Test event 2\"\n              countdown=\"11\"\n              timeUnit=\"days\"\n            />\n          </div>\n          <div className=\"flex flex-col gap-4\">\n            <SideItem taskName=\"Task 1\" dueDate=\"dd/mm/yyyy\" />\n            <SideItem taskName=\"Task 2\" dueDate=\"dd/mm/yyyy\" />\n            <SideItem taskName=\"Task 3\" dueDate=\"dd/mm/yyyy\" />\n          </div>\n          <SideStickie />\n        </div>\n      </div>\n    </SettingsContextProvider>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { BiInfoCircle } from \"react-icons/bi\";\n\nexport default function WorkModeAlert({ workMode }) {\n  const [bannerVisible, setBannerVisible] = useState(false);\n\n  useEffect(() => {\n    setBannerVisible(true);\n    const banner = setTimeout(() => {\n      setBannerVisible(false);\n    }, 2500);\n    return () => {\n      clearTimeout(banner);\n    };\n  }, [workMode]);\n\n  return (\n    <div\n      className={`absolute inset-x-1/2 transition-transform duration-500 w-[200px] -top-12 h-12 bg-white shadow-md dark:bg-primary-700 rounded-md flex justify-center items-center px-3 py-2 gap-2 text-black dark:text-white ${\n        bannerVisible ? \"translate-y-[5.5rem]\" : \"\"\n      }`}\n    >\n      <div className=\"text-2xl\">\n        <BiInfoCircle />\n      </div>\n      <h3 className=\"leading-4\">\n        {workMode\n          ? \"Current workspace: Work mode\"\n          : \"Current workspace: Personal mode\"}\n      </h3>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { BiInfoCircle } from \"react-icons/bi\";\n\nexport default function PomodoroAlert({ timerComplete }) {\n  const [bannerVisible, setBannerVisible] = useState(false);\n\n  useEffect(() => {\n    if (timerComplete) {\n      setBannerVisible(true);\n    }\n    const banner = setTimeout(() => {\n      setBannerVisible(false);\n    }, 2500);\n    return () => {\n      clearTimeout(banner);\n    };\n  }, [timerComplete]);\n\n  return (\n    <div\n      className={`absolute inset-x-1/2 transition-transform duration-500 w-[200px] -top-12 h-12 bg-white shadow-md dark:bg-primary-700 rounded-md flex justify-center items-center px-3 py-2 gap-2 text-black dark:text-white ${\n        bannerVisible ? \"translate-y-[5.5rem]\" : \"\"\n      }`}\n    >\n      <div className=\"text-2xl\">\n        <BiInfoCircle />\n      </div>\n      <h3 className=\"leading-4\">Your pomodoro session is done!</h3>\n    </div>\n  );\n}\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nimport Navbar from \"./components/navbar/Navbar\";\n\n// import \"react-calendar/dist/Calendar.css\";\n\nimport Dashboard from \"./components/Dashboard\";\nimport Profile from \"./components/Profile\";\nimport Reminders from \"./components/reminders/Reminders\";\nimport Notes from \"./components/notes/Notes\";\nimport ReadingList from \"./components/readingList/ReadingList\";\nimport Extras from \"./components/Extras\";\nimport Settings from \"./components/Settings\";\nimport SidePanel from \"./components/sidebar/SidePanel\";\n\nimport HashLoader from \"react-spinners/HashLoader\";\nimport WorkModeAlert from \"./components/ui/WorkModeAlert\";\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  BiListUl,\n  BiSun,\n  BiCalendarExclamation,\n  BiStar,\n  BiArchive,\n  BiBookHeart,\n  BiTime,\n  BiCheckCircle,\n  BiBookContent,\n} from \"react-icons/bi\";\nimport PomodoroAlert from \"./components/ui/PomodoroAlert\";\n\nfunction App() {\n  const remindersData1 = [\n    {\n      id: uuidv4(),\n      title: \"Today\",\n      color: \"blue\",\n      icon: <BiSun />,\n      tasks: [],\n      completed: [],\n      showCompleted: false,\n    },\n    {\n      id: uuidv4(),\n      title: \"Priority\",\n      color: \"red\",\n      icon: <BiCalendarExclamation />,\n      tasks: [],\n      completed: [],\n      showCompleted: false,\n    },\n    {\n      id: uuidv4(),\n      title: \"Starred\",\n      color: \"yellow\",\n      icon: <BiStar />,\n      tasks: [],\n      completed: [],\n      showCompleted: false,\n    },\n    {\n      id: uuidv4(),\n      title: \"All\",\n      color: \"gray\",\n      icon: <BiArchive />,\n      tasks: [],\n      completed: [],\n      showCompleted: false,\n    },\n    {\n      id: uuidv4(),\n      title: \"Reminder List 1\",\n      color: \"red\",\n      icon: <BiListUl />,\n      tasks: [\n        {\n          id: uuidv4(),\n          title: \"Task 1\",\n          dueDate: Date.now(),\n\n          description:\n            \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quos maxime iste illum et deleniti doloribus quas dolorem dicta, accusamus ullam.\",\n          today: false,\n          important: false,\n          starred: false,\n          expanded: false,\n          pinned: false,\n        },\n        {\n          id: uuidv4(),\n          title: \"Task 2\",\n          dueDate: Date.now(),\n\n          description: \"\",\n          today: false,\n          important: false,\n          starred: false,\n          expanded: false,\n          pinned: false,\n        },\n      ],\n      completed: [],\n      showCompleted: false,\n    },\n    {\n      id: uuidv4(),\n      title: \"Reminder List 2\",\n      color: \"yellow\",\n      icon: <BiListUl />,\n      tasks: [\n        {\n          id: uuidv4(),\n          title: \"Task 3\",\n          dueDate: Date.now(),\n\n          description: \"desc 3\",\n          today: false,\n          important: false,\n          starred: false,\n          expanded: false,\n          pinned: false,\n        },\n        {\n          id: uuidv4(),\n          title: \"Task 4\",\n          dueDate: Date.now(),\n\n          description: \"desc 4\",\n          today: false,\n          important: false,\n          starred: false,\n          expanded: false,\n          pinned: false,\n        },\n      ],\n      completed: [],\n      showCompleted: false,\n    },\n    {\n      id: uuidv4(),\n      title: \"Reminder List 3\",\n      color: \"purple\",\n      icon: <BiListUl />,\n      tasks: [\n        {\n          id: uuidv4(),\n          title: \"Task 5\",\n          dueDate: Date.now(),\n\n          description: \"desc 5\",\n          today: false,\n          important: false,\n          starred: false,\n          expanded: false,\n          pinned: false,\n        },\n        {\n          id: uuidv4(),\n          title: \"Task 6\",\n          dueDate: Date.now(),\n\n          description: \"desc 6\",\n          today: false,\n          important: false,\n          starred: false,\n          expanded: false,\n          pinned: false,\n        },\n      ],\n      completed: [],\n      showCompleted: false,\n    },\n  ];\n\n  const reminderData2 = [\n    {\n      id: uuidv4(),\n      title: \"Today\",\n      color: \"blue\",\n      icon: <BiSun />,\n      tasks: [],\n      completed: [],\n      showCompleted: false,\n    },\n    {\n      id: uuidv4(),\n      title: \"Priority\",\n      color: \"red\",\n      icon: <BiCalendarExclamation />,\n      tasks: [],\n      completed: [],\n      showCompleted: false,\n    },\n    {\n      id: uuidv4(),\n      title: \"Starred\",\n      color: \"yellow\",\n      icon: <BiStar />,\n      tasks: [],\n      completed: [],\n      showCompleted: false,\n    },\n    {\n      id: uuidv4(),\n      title: \"All\",\n      color: \"gray\",\n      icon: <BiArchive />,\n      tasks: [],\n      completed: [],\n      showCompleted: false,\n    },\n  ];\n\n  const readingListData1 = [\n    {\n      id: uuidv4(),\n      title: \"In progress\",\n      color: \"yellow\",\n      icon: <BiTime />,\n      books: [],\n    },\n    {\n      id: uuidv4(),\n      title: \"Finished\",\n      color: \"green\",\n      icon: <BiCheckCircle />,\n      books: [],\n    },\n    {\n      id: uuidv4(),\n      title: \"Book type\",\n      color: \"blue\",\n      icon: <BiBookContent />,\n      books: [],\n    },\n    {\n      id: uuidv4(),\n      title: \"Favorites\",\n      color: \"pink\",\n      icon: <BiBookHeart />,\n      books: [],\n    },\n    {\n      id: uuidv4(),\n      title: \"All\",\n      color: \"gray\",\n      icon: <BiArchive />,\n      books: [],\n    },\n    {\n      id: uuidv4(),\n      title: \"School reading\",\n      color: \"red\",\n      icon: <BiListUl />,\n      books: [\n        {\n          id: uuidv4(),\n          title: \"Book 1\",\n          author: \"author 1\",\n          description:\n            \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Inventore voluptates optio aliquid autem consequuntur quos architecto provident corrupti officia! Iure.\",\n          rating: 5,\n          type: \"Audiobook\",\n          progress: \"In progress\",\n          favorite: false,\n          expanded: true,\n        },\n        {\n          id: uuidv4(),\n          title: \"Book 2\",\n          author: \"author 2\",\n          description:\n            \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Inventore voluptates optio aliquid autem consequuntur quos architecto provident corrupti officia! Iure.\",\n          rating: 4,\n          type: \"Paperback\",\n          progress: \"Complete\",\n          favorite: false,\n          expanded: false,\n        },\n      ],\n    },\n  ];\n\n  const readingListData2 = [\n    {\n      id: uuidv4(),\n      title: \"In progress\",\n      color: \"yellow\",\n      icon: <BiTime />,\n      books: [],\n    },\n    {\n      id: uuidv4(),\n      title: \"Finished\",\n      color: \"green\",\n      icon: <BiCheckCircle />,\n      books: [],\n    },\n    {\n      id: uuidv4(),\n      title: \"Book type\",\n      color: \"blue\",\n      icon: <BiBookContent />,\n      books: [],\n    },\n    {\n      id: uuidv4(),\n      title: \"Favorites\",\n      color: \"pink\",\n      icon: <BiBookHeart />,\n      books: [],\n    },\n    {\n      id: uuidv4(),\n      title: \"All\",\n      color: \"gray\",\n      icon: <BiArchive />,\n      books: [],\n    },\n  ];\n\n  let darkModeValue = false;\n  let workModeValue = true;\n\n  if (localStorage.getItem(\"darkMode\") !== null) {\n    darkModeValue = JSON.parse(localStorage.getItem(\"darkMode\"));\n  }\n\n  if (localStorage.getItem(\"workMode\") !== null) {\n    workModeValue = JSON.parse(localStorage.getItem(\"workMode\"));\n  }\n\n  const [darkMode, setDarkMode] = useState(darkModeValue);\n  const [loading, setLoading] = useState(false);\n  const [credits, setCredits] = useState(0);\n  const [workMode, setWorkMode] = useState(workModeValue);\n  const [reminderData, setReminderData] = useState(remindersData1);\n  const [readingListData, setReadingListData] = useState(readingListData1);\n  const [timerComplete, setTimerComplete] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  const toggleThemeHandler = () => {\n    localStorage.setItem(\"darkMode\", !darkMode);\n    setDarkMode(!darkMode);\n  };\n\n  const toggleWorkMode = () => {\n    localStorage.setItem(\"workMode\", !workMode);\n    setWorkMode(!workMode);\n  };\n\n  useEffect(() => {\n    if (workMode) {\n      setReminderData(remindersData1);\n      setReadingListData(readingListData1);\n    } else {\n      setReminderData(reminderData2);\n      setReadingListData(readingListData2);\n    }\n  }, [workMode]);\n\n  return (\n    <div className={`${darkMode ? \"dark\" : \"\"} App overflow-hidden`}>\n      {loading ? (\n        <div className=\"text-center justify-center items-center flex w-screen h-screen\">\n          <HashLoader color={\"#3B82F6\"} loading={loading} size={75} />\n        </div>\n      ) : (\n        <Router>\n          <div className=\"flex\">\n            <Navbar />\n            <div className=\"w-full relative\">\n              <WorkModeAlert workMode={workMode} />\n              <PomodoroAlert timerComplete={timerComplete} />\n              <Switch>\n                <Route path=\"/\" exact component={Dashboard} />\n                <Route\n                  path=\"/reminders\"\n                  render={(props) => (\n                    <Reminders\n                      {...props}\n                      key={reminderData}\n                      remindersData={reminderData}\n                      darkMode={darkMode}\n                    />\n                  )}\n                />\n                <Route\n                  path=\"/notes\"\n                  render={(props) => <Notes {...props} darkMode={darkMode} />}\n                />\n                <Route\n                  path=\"/reading-list\"\n                  render={(props) => (\n                    <ReadingList\n                      {...props}\n                      key={readingListData}\n                      readingListData={readingListData}\n                    />\n                  )}\n                />\n                <Route path=\"/extensions\" component={Extras} />\n                <Route path=\"/profile\" component={Profile} />\n                <Route path=\"/settings\" component={Settings} />\n              </Switch>\n            </div>\n            <div className=\"w-0 lg:w-72\">\n              <SidePanel\n                onClick={toggleThemeHandler}\n                credits={credits}\n                setCredits={setCredits}\n                workMode={workMode}\n                toggleWorkMode={toggleWorkMode}\n                setTimerComplete={setTimerComplete}\n              />\n            </div>\n          </div>\n        </Router>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}